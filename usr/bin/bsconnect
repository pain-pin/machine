#!/usr/bin/bash

USER=${1:-"ni-bot"}
PASSWD=${2:-"passwd_dflt"}
DIR="/tmp/bs"
USER_FULL="$USER.bsky.social"
TOKEN_FILE=$DIR/$USER_FULL.tok
mkdir $DIR

if [ "$#" -eq 2 ] ; then
	curl -X POST https://bsky.social/xrpc/com.atproto.server.createSession \
  -H 'Content-Type: application/json' \
  -d "{'identifier': '$USER_FULL', 'password': '$PASSWD'}" \
  >> $TOKEN_FILE
	echo $USER_FULL > $DIR/last

	exit 0
fi

if [ "$#" -eq 1 ] ; then
	ACCESS_TOKEN=$(jq -r '.accessJwt' $TOKEN_FILE)
	#curl -s \
	#  -H "Authorization: Bearer $ACCESS_TOKEN" \
	#  https://bsky.social/xrpc/com.atproto.identity.resolveHandle?handle=user.bsky.social
	if [[ ! -f "$TOKEN_FILE" ]]; then
	    echo "Token file not found: $TOKEN_FILE"
	    exit 1
	fi
	# Test the token by calling a simple endpoint (whoami equivalent)
	HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" \
	    -H "Authorization: Bearer $ACCESS_TOKEN" \
	    https://bsky.social/xrpc/com.atproto.server.getSession)
	if [[ "$HTTP_STATUS" -eq 200 ]]; then
	    echo "Token is valid"
		echo $USER_FULL > $DIR/last
	    exit 0
	elif [[ "$HTTP_STATUS" -eq 0 ]]; then
	    echo "HTTP $HTTP_STATUS"
		echo $USER_FULL > $DIR/last
	    exit 1
	else
	    echo "Token is invalid or expired (HTTP $HTTP_STATUS)"
	    exit 1
	fi


fi

exit 0


#!/bin/bash
# usage: ./install_dietpi.sh /dev/sdX [dietpi.img] [dietpi.img.sha256]

set -euo pipefail

DEV="${1:-}"
IMG="${2:-}"
SUMFILE="${3:-}"

if [ -z "$DEV" ]; then
    echo "Usage: $0 /dev/sdX [image.img] [image.img.sha256]"
    exit 1
fi

# URL par défaut
DIETPI_URL="https://dietpi.com/downloads/images/DietPi_RPi-ARMv8-Bookworm.img.xz"
SUM_URL="$DIETPI_URL.sha256"

# Fichiers locaux
IMG=${IMG:-"$(basename "$DIETPI_URL" .xz)"}
SUMFILE=${SUMFILE:-"$IMG.sha256"}

# Téléchargement si absent
if [ ! -f "$IMG" ]; then
    echo "Téléchargement image..."
    curl -L "$DIETPI_URL" -o "$IMG.xz"
    unxz "$IMG.xz"
fi

if [ ! -f "$SUMFILE" ]; then
    echo "Téléchargement somme..."
    curl -L "$SUM_URL" -o "$SUMFILE"
fi

# Vérif périphérique bloc
[ -b "$DEV" ] || { echo "Erreur: $DEV n'est pas un périphérique bloc"; exit 1; }

# Vérif somme avant écriture
sha256sum -c "$SUMFILE" || { echo "Image corrompue"; exit 1; }

# Protection: éviter si monté
if mount | grep -q "^$DEV"; then
    echo "Erreur: $DEV est monté. Démontez d’abord."
    exit 1
fi

# Confirmation
echo "ATTENTION: $IMG sera écrit sur $DEV"
read -p "Confirmer (oui/non): " ans
[ "$ans" = "oui" ] || { echo "Abandon"; exit 1; }

# Écriture avec cp
echo "Écriture en cours..."
sudo cp "$IMG" "$DEV"
sync

# Vérif après écriture
echo "Vérification écriture..."
dd if="$DEV" bs=4M count=$(( $(stat -c%s "$IMG") / (4*1024*1024) )) status=none | sha256sum | awk '{print $1}' > /tmp/devsum
cut -d' ' -f1 "$SUMFILE" > /tmp/imgsum

if cmp -s /tmp/devsum /tmp/imgsum; then
    echo "Écriture et vérification OK"
else
    echo "Erreur: vérification échouée"
    exit 1
fi

